commontemplate.keywordsSettings=$keywords
keywords=org.commontemplate.standard.syntax.KeywordsSettings()
keywords.null="null"
keywords.true="true"
keywords.false="false"
keywords.currentLocalContext=this
keywords.parentLocalContext=super
keywords.context=context

commontemplate.functionAvailable=$functionAvailable
functionAvailable=true

commontemplate.operatorHandlerProvider=org.commontemplate.standard.operator.StandardOperatorHandlerProvider()
commontemplate.operatorHandlerProvider.unaryOperatorHandlers=unaryOperator{}
commontemplate.operatorHandlerProvider.binaryOperatorHandlers=binaryOperator{}
commontemplate.operatorHandlerProvider.unaryOperatorPrioritys=unaryPriority{}
commontemplate.operatorHandlerProvider.binaryOperatorPrioritys=binaryPriority{}
commontemplate.operatorHandlerProvider.functionPriority=$functionPriority

unaryOperator{max}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{max}.unaryOperatorHandlers=maxUnaryOperator[]
maxUnaryOperator[100]=org.commontemplate.standard.operator.number.MaxOperatorHandler()

unaryOperator{min}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{min}.unaryOperatorHandlers=minUnaryOperator[]
minUnaryOperator[100]=org.commontemplate.standard.operator.number.MinOperatorHandler()

unaryOperator{sum}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{sum}.unaryOperatorHandlers=sumUnaryOperator[]
sumUnaryOperator[100]=org.commontemplate.standard.operator.number.SumOperatorHandler()

unaryOperator{avg}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{avg}.unaryOperatorHandlers=avgUnaryOperator[]
avgUnaryOperator[100]=org.commontemplate.standard.operator.number.AvgOperatorHandler()

unaryOperator{@}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{@}.unaryOperatorHandlers=addressUnaryOperator[]
addressUnaryOperator[100]=org.commontemplate.standard.operator.string.NotEscapeStringOperatorHandler()

unaryOperator{!}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{!}.unaryOperatorHandlers=notUnaryOperator[]
notUnaryOperator[100]=org.commontemplate.standard.operator.bool.BooleanNotOperatorHandler()

unaryOperator{~}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{~}.unaryOperatorHandlers=bitNotUnaryOperator[]
bitNotUnaryOperator[100]=org.commontemplate.standard.operator.number.BitNotOperatorHandler()

unaryOperator{&}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{&}.operandNamed=true
unaryOperator{&}.operandDotNamed=true
unaryOperator{&}.operandFunctioned=true
unaryOperator{&}.unaryOperatorHandlers=classUnaryOperator[]
classUnaryOperator[100]=org.commontemplate.standard.operator.object.ClassStaticPropertyOperatorHandler()
classUnaryOperator[200]=org.commontemplate.standard.operator.object.ClassStaticFunctionOperatorHandler()

unaryOperator{$}=$unaryOperator{new}
unaryOperator{new}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{new}.operandNamed=true
unaryOperator{new}.operandDotNamed=true
unaryOperator{new}.operandFunctioned=true
unaryOperator{new}.keyword=true
unaryOperator{new}.unaryOperatorHandlers=newUnaryOperator[]
newUnaryOperator[100]=org.commontemplate.standard.operator.object.NewInstanceOperatorHandler()
newUnaryOperator[200]=org.commontemplate.standard.operator.object.NewInstanceConstructorOperatorHandler()

unaryOperator{\=>}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{\=>}.operandLazy=true
unaryOperator{\=>}.unaryOperatorHandlers=filterUnaryOperator[]
filterUnaryOperator[100]=org.commontemplate.standard.operator.collection.FilterOperatorHandler()

unaryOperator{?}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{?}.unaryOperatorHandlers=presenceUnaryOperator[]
presenceUnaryOperator[100]=org.commontemplate.standard.operator.collection.MapPresenceOperatorHandler()
presenceUnaryOperator[200]=org.commontemplate.standard.operator.collection.CollectionPresenceOperatorHandler()
presenceUnaryOperator[300]=org.commontemplate.standard.operator.string.StringPresenceOperatorHandler()
presenceUnaryOperator[400]=org.commontemplate.standard.operator.object.ObjectPresenceOperatorHandler()

unaryOperator{\\}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{\\}.unaryOperatorHandlers=slashUnaryOperator[]
slashUnaryOperator[100]=org.commontemplate.standard.operator.context.VariableOperatorHandler()

unaryOperator{+}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{+}.unaryOperatorHandlers=plusUnaryOperator[]
plusUnaryOperator[100]=org.commontemplate.standard.operator.number.NumberPositiveOperatorHandler()

unaryOperator{-}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{-}.unaryOperatorHandlers=minusUnaryOperator[]
minusUnaryOperator[100]=org.commontemplate.standard.operator.number.NumberNegativeOperatorHandler()
minusUnaryOperator[500]=org.commontemplate.standard.operator.string.StringReverseOperatorHandler()
minusUnaryOperator[600]=org.commontemplate.standard.operator.collection.ListReverseOperatorHandler()
minusUnaryOperator[700]=org.commontemplate.standard.operator.collection.ArrayReverseOperatorHandler()

unaryOperator{[}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{[}.unaryOperatorHandlers=squareUnaryOperator[]
squareUnaryOperator[100]=org.commontemplate.standard.operator.collection.ToCollectionOperatorHandler()

unaryOperator{.}=org.commontemplate.standard.operator.UnaryOperatorHandlerChain()
unaryOperator{.}.operandNamed=true
unaryOperator{.}.operandFunctioned=true
unaryOperator{.}.unaryOperatorHandlers=dotUnaryOperator[]
dotUnaryOperator[50]=org.commontemplate.standard.operator.number.DecimalOperatorHandler()
dotUnaryOperator[100]=org.commontemplate.standard.operator.context.StaticFunctionOperatorHandler()
dotUnaryOperator[100].staticFunctionHandlers=staticFunction{}
dotUnaryOperator[200]=org.commontemplate.standard.operator.context.StaticPropertyOperatorHandler()
dotUnaryOperator[200].staticPropertyHandlers=staticProperty{}

binaryOperator{~}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{~}.binaryOperatorHandlers=matchBinaryOperator[]
matchBinaryOperator[100]=org.commontemplate.standard.operator.string.StringMatchOperatorHandler()
matchBinaryOperator[200]=org.commontemplate.standard.operator.collection.ContainOperatorHandler()

binaryOperator{!~}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{!~}.binaryOperatorHandlers=notMatchBinaryOperator[]
notMatchBinaryOperator[100]=org.commontemplate.standard.operator.string.StringNotMatchOperatorHandler()
notMatchBinaryOperator[200]=org.commontemplate.standard.operator.collection.NotContainOperatorHandler()

binaryOperator{is}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{is}.binaryOperatorHandlers=isBinaryOperator[]
isBinaryOperator[100]=org.commontemplate.standard.operator.object.InstanceofClassOperatorHandler()
isBinaryOperator[200]=org.commontemplate.standard.operator.object.InstanceofStringOperatorHandler()

binaryOperator{instanceof}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{instanceof}.binaryOperatorHandlers=instanceofBinaryOperator[]
instanceofBinaryOperator[100]=org.commontemplate.standard.operator.object.InstanceofClassOperatorHandler()
instanceofBinaryOperator[200]=org.commontemplate.standard.operator.object.InstanceofStringOperatorHandler()

binaryOperator{or}=$binaryOperator{||}
binaryOperator{||}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{||}.associative=true
binaryOperator{||}.commutative=true
binaryOperator{||}.rightOperandLazy=true
binaryOperator{||}.binaryOperatorHandlers=orBinaryOperator[]
orBinaryOperator[100]=org.commontemplate.standard.operator.bool.BooleanOrOperatorHandler()

binaryOperator{and}=$binaryOperator{&&}
binaryOperator{&&}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{&&}.associative=true
binaryOperator{&&}.commutative=true
binaryOperator{&&}.rightOperandLazy=true
binaryOperator{&&}.binaryOperatorHandlers=andBinaryOperator[]
andBinaryOperator[100]=org.commontemplate.standard.operator.bool.BooleanAndOperatorHandler()

binaryOperator{xor}=$binaryOperator{^}
binaryOperator{^}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{^}.associative=true
binaryOperator{^}.commutative=true
binaryOperator{^}.binaryOperatorHandlers=xorBinaryOperator[]
xorBinaryOperator[100]=org.commontemplate.standard.operator.bool.BooleanXorOperatorHandler()
xorBinaryOperator[200]=org.commontemplate.standard.operator.number.BitXorOperatorHandler()

binaryOperator{|}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{|}.associative=true
binaryOperator{|}.commutative=true
binaryOperator{|}.binaryOperatorHandlers=bitOrBinaryOperator[]
bitOrBinaryOperator[100]=org.commontemplate.standard.operator.number.BitOrOperatorHandler()

binaryOperator{&}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{&}.associative=true
binaryOperator{&}.commutative=true
binaryOperator{&}.binaryOperatorHandlers=bitAndBinaryOperator[]
bitAndBinaryOperator[100]=org.commontemplate.standard.operator.number.BitAndOperatorHandler()

binaryOperator{>>}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{>>}.binaryOperatorHandlers=bitRightShiftBinaryOperator[]
bitRightShiftBinaryOperator[100]=org.commontemplate.standard.operator.number.BitRightShiftOperatorHandler()

binaryOperator{<<}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{<<}.binaryOperatorHandlers=bitLeftShiftBinaryOperator[]
bitLeftShiftBinaryOperator[100]=org.commontemplate.standard.operator.number.BitLeftShiftOperatorHandler()

binaryOperator{>>>}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{>>>}.binaryOperatorHandlers=bitUnsignedShiftBinaryOperator[]
bitUnsignedShiftBinaryOperator[100]=org.commontemplate.standard.operator.number.BitUnsignedShiftOperatorHandler()

binaryOperator{?}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{?}.rightOperandLazy=true
binaryOperator{?}.binaryOperatorHandlers=selectorBinaryOperator[]
selectorBinaryOperator[100]=org.commontemplate.standard.operator.bool.BooleanSelectOperatorHandler()

binaryOperator{\:}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{\:}.leftOperandNamed=true
binaryOperator{\:}.binaryOperatorHandlers=entryBinaryOperator[]
entryBinaryOperator[100]=org.commontemplate.standard.operator.bool.SelectorEntryOperatorHandler()
entryBinaryOperator[200]=org.commontemplate.standard.operator.collection.LiteralEntryOperatorHandler()

binaryOperator{->}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{->}.leftOperandNamed=true
binaryOperator{->}.rightOperandNamed=true
binaryOperator{->}.binaryOperatorHandlers=namePairBinaryOperator[]
namePairBinaryOperator[100]=org.commontemplate.standard.operator.string.NamePairOperatorHandler()

binaryOperator{\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{\=}.leftOperandNamed=true
binaryOperator{\=}.binaryOperatorHandlers=assignBinaryOperator[]
assignBinaryOperator[100]=org.commontemplate.standard.operator.collection.LiteralEntryOperatorHandler()

binaryOperator{\=>}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{\=>}.leftOperandNamed=true
binaryOperator{\=>}.rightOperandLazy=true
binaryOperator{\=>}.binaryOperatorHandlers=filterBinaryOperator[]
filterBinaryOperator[100]=org.commontemplate.standard.operator.collection.FilterEntryOperatorHandler()

binaryOperator{aeq}=$binaryOperator{===}
binaryOperator{\=\=\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{\=\=\=}.binaryOperatorHandlers=addressEqualsBinaryOperator[]
addressEqualsBinaryOperator[100]=org.commontemplate.standard.operator.compare.AddressEqualsOperatorHandler()

binaryOperator{ane}=$binaryOperator{!===}
binaryOperator{!\=\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{!\=\=}.binaryOperatorHandlers=addressNotEqualsBinaryOperator[]
addressNotEqualsBinaryOperator[100]=org.commontemplate.standard.operator.compare.AddressNotEqualsOperatorHandler()

binaryOperator{eq}=$binaryOperator{==}
binaryOperator{\=\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{\=\=}.binaryOperatorHandlers=equalsBinaryOperator[]
equalsBinaryOperator[100]=org.commontemplate.standard.operator.compare.EqualsOperatorHandler()

binaryOperator{ne}=$binaryOperator{!=}
binaryOperator{!\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{!\=}.binaryOperatorHandlers=notEqualsBinaryOperator[]
notEqualsBinaryOperator[100]=org.commontemplate.standard.operator.compare.NotEqualsOperatorHandler()

binaryOperator{gt}=$binaryOperator{>}
binaryOperator{>}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{>}.binaryOperatorHandlers=greaterThanBinaryOperator[]
greaterThanBinaryOperator[100]=org.commontemplate.standard.operator.compare.GreaterThanOperatorHandler()

binaryOperator{ge}=$binaryOperator{>=}
binaryOperator{>\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{>\=}.binaryOperatorHandlers=greaterEqualBinaryOperator[]
greaterEqualBinaryOperator[100]=org.commontemplate.standard.operator.compare.GreaterEqualOperatorHandler()

binaryOperator{lt}=$binaryOperator{<}
binaryOperator{<}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{<}.binaryOperatorHandlers=lessThanBinaryOperator[]
lessThanBinaryOperator[100]=org.commontemplate.standard.operator.compare.LessThanOperatorHandler()

binaryOperator{le}=$binaryOperator{<=}
binaryOperator{<\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{<\=}.binaryOperatorHandlers=lessEqualBinaryOperator[]
lessEqualBinaryOperator[100]=org.commontemplate.standard.operator.compare.LessEqualOperatorHandler()

binaryOperator{cmp}=$binaryOperator{<=>}
binaryOperator{<\=>}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{<\=>}.binaryOperatorHandlers=compareBinaryOperator[]
compareBinaryOperator[100]=org.commontemplate.standard.operator.compare.CompareOperatorHandler()

binaryOperator{~\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{~\=}.binaryOperatorHandlers=approximateBinaryOperator[]
approximateBinaryOperator[100]=org.commontemplate.standard.operator.number.NumberApproximateEqualsOperatorHandler()
approximateBinaryOperator[200]=org.commontemplate.standard.operator.date.DateIgnoreTimeEqualsOperatorHandler()
approximateBinaryOperator[300]=org.commontemplate.standard.operator.string.StringIgnoreCaseEqualsOperatorHandler()
approximateBinaryOperator[400]=org.commontemplate.standard.operator.compare.ApproximateEqualsOperatorHandler()

binaryOperator{^\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{^\=}.binaryOperatorHandlers=startsWithBinaryOperator[]
startsWithBinaryOperator[100]=org.commontemplate.standard.operator.string.StringStartsWithOperatorHandler()

binaryOperator{$\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{$\=}.binaryOperatorHandlers=endsWithBinaryOperator[]
endsWithBinaryOperator[100]=org.commontemplate.standard.operator.string.StringEndsWithOperatorHandler()

binaryOperator{*\=}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{*\=}.binaryOperatorHandlers=containsWithBinaryOperator[]
containsWithBinaryOperator[100]=org.commontemplate.standard.operator.string.StringContainsWithOperatorHandler()

binaryOperator{^~}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{^~}.binaryOperatorHandlers=ignoreCaseStartsWithBinaryOperator[]
ignoreCaseStartsWithBinaryOperator[100]=org.commontemplate.standard.operator.string.StringIgnoreCaseStartsWithOperatorHandler()

binaryOperator{$~}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{$~}.binaryOperatorHandlers=ignoreCaseEndsWithBinaryOperator[]
ignoreCaseEndsWithBinaryOperator[100]=org.commontemplate.standard.operator.string.StringIgnoreCaseEndsWithOperatorHandler()

binaryOperator{*~}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{*~}.binaryOperatorHandlers=ignoreCaseContainsWithBinaryOperator[]
ignoreCaseContainsWithBinaryOperator[100]=org.commontemplate.standard.operator.string.StringIgnoreCaseContainsWithOperatorHandler()

binaryOperator{^?}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{^?}.binaryOperatorHandlers=indexOfBinaryOperator[]
indexOfBinaryOperator[100]=org.commontemplate.standard.operator.string.StringIndexOfOperatorHandler()

binaryOperator{$?}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{$?}.binaryOperatorHandlers=lastIndexOfBinaryOperator[]
lastIndexOfBinaryOperator[100]=org.commontemplate.standard.operator.string.StringLastIndexOfOperatorHandler()

binaryOperator{*?}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{*?}.binaryOperatorHandlers=countMatchesBinaryOperator[]
countMatchesBinaryOperator[100]=org.commontemplate.standard.operator.string.StringCountMatchesOperatorHandler()

binaryOperator{^-}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{^-}.binaryOperatorHandlers=prefixBinaryOperator[]
prefixBinaryOperator[100]=org.commontemplate.standard.operator.string.StringPrefixOperatorHandler()

binaryOperator{$-}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{$-}.binaryOperatorHandlers=suffixBinaryOperator[]
suffixBinaryOperator[100]=org.commontemplate.standard.operator.string.StringSuffixOperatorHandler()

binaryOperator{+}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{+}.associative=true
binaryOperator{+}.commutative=true
binaryOperator{+}.binaryOperatorHandlers=addBinaryOperator[]
addBinaryOperator[100]=org.commontemplate.standard.operator.date.DateFieldAddOperatorHandler()
addBinaryOperator[200]=org.commontemplate.standard.operator.number.NumberAddOperatorHandler()
addBinaryOperator[600]=org.commontemplate.standard.operator.collection.ListAddOperatorHandler()
addBinaryOperator[700]=org.commontemplate.standard.operator.collection.MapAddOperatorHandler()
addBinaryOperator[800]=org.commontemplate.standard.operator.string.StringConcatenateOperatorHandler()

binaryOperator{-}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{-}.associative=true
binaryOperator{-}.commutative=true
binaryOperator{-}.binaryOperatorHandlers=subtractBinaryOperator[]
subtractBinaryOperator[100]=org.commontemplate.standard.operator.date.DateFieldSubtractOperatorHandler()
subtractBinaryOperator[200]=org.commontemplate.standard.operator.number.NumberSubtractOperatorHandler()
subtractBinaryOperator[300]=org.commontemplate.standard.operator.string.StringRemoveOperatorHandler()

binaryOperator{*}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{*}.associative=true
binaryOperator{*}.commutative=true
binaryOperator{*}.binaryOperatorHandlers=multiplyBinaryOperator[]
multiplyBinaryOperator[100]=org.commontemplate.standard.operator.number.NumberMultiplyOperatorHandler()
multiplyBinaryOperator[200]=org.commontemplate.standard.operator.string.StringRepeatOperatorHandler()
multiplyBinaryOperator[300]=org.commontemplate.standard.operator.collection.ArrayRepeatOpreatorHandler()
multiplyBinaryOperator[400]=org.commontemplate.standard.operator.collection.CollectionRepeatOpreatorHandler()
multiplyBinaryOperator[500]=org.commontemplate.standard.operator.collection.MapRepeatOpreatorHandler()

binaryOperator{**}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{**}.associative=true
binaryOperator{**}.binaryOperatorHandlers=powerBinaryOperator[]
powerBinaryOperator[100]=org.commontemplate.standard.operator.number.NumberPowerOperatorHandler()

binaryOperator{/}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{/}.associative=true
binaryOperator{/}.binaryOperatorHandlers=divideBinaryOperator[]
divideBinaryOperator[100]=org.commontemplate.standard.operator.number.NumberDivideOperatorHandler()
divideBinaryOperator[200]=org.commontemplate.standard.operator.string.StringSplitOperatorHandler()

binaryOperator{%}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{%}.associative=true
binaryOperator{%}.binaryOperatorHandlers=modulusBinaryOperator[]
modulusBinaryOperator[100]=org.commontemplate.standard.operator.number.NumberModulusOperatorHandler()
modulusBinaryOperator[200]=org.commontemplate.standard.operator.string.StringAbbreviateOperatorHandler()

binaryOperator{,}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{,}.binaryOperatorHandlers=listBinaryOperator[]
listBinaryOperator[100]=org.commontemplate.standard.operator.collection.LiteralListOperatorHandler()

binaryOperator{..}=org.commontemplate.standard.operator.sequence.MergeSequenceOperatorHandlerChain()
binaryOperator{..}.binaryOperatorHandlers=sequenceBinaryOperator[]
sequenceBinaryOperator[100]=org.commontemplate.standard.operator.sequence.IntegerSequenceOperatorHandler()
sequenceBinaryOperator[200]=org.commontemplate.standard.operator.sequence.StringSequenceOperatorHandler()
sequenceBinaryOperator[200].sequences=sequence<>
sequenceBinaryOperator[300]=org.commontemplate.standard.operator.sequence.CharacterSequenceOperatorHandler()

binaryOperator{orderby}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{orderby}.binaryOperatorHandlers=orderbyBinaryOperator[]
orderbyBinaryOperator[100]=org.commontemplate.standard.operator.collection.OrderByPropertyOperatorHandler()
orderbyBinaryOperator[200]=org.commontemplate.standard.operator.collection.OrderByPropertiesOperatorHandler()

binaryOperator{#}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{#}.binaryOperatorHandlers=formatBinaryOperator[]
formatBinaryOperator[100]=org.commontemplate.standard.operator.date.DateFormatOperatorHandler()
formatBinaryOperator[200]=org.commontemplate.standard.operator.number.NumberFormatOperatorHandler()

binaryOperator{[}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{[}.binaryOperatorHandlers=getterBinaryOperator[]
getterBinaryOperator[50]=org.commontemplate.standard.operator.collection.ListSubFilterOperatorHandler()
getterBinaryOperator[50].itemName=item
getterBinaryOperator[50].indexName=index
getterBinaryOperator[50].sizeName=size
getterBinaryOperator[50].countName=count
getterBinaryOperator[60]=org.commontemplate.standard.operator.collection.MapSubFilterOperatorHandler()
getterBinaryOperator[60].entryName=entry
getterBinaryOperator[60].indexName=index
getterBinaryOperator[60].sizeName=size
getterBinaryOperator[60].countName=count
getterBinaryOperator[100]=org.commontemplate.standard.operator.object.ObjectPropertyOperatorHandler()
getterBinaryOperator[100].propertyHandlers=property{}
getterBinaryOperator[150]=org.commontemplate.standard.operator.context.ScopesGetterOperatorHandler()
getterBinaryOperator[200]=org.commontemplate.standard.operator.context.LocalContextGetterOperatorHandler()
getterBinaryOperator[300]=org.commontemplate.standard.operator.collection.MapSelectorOperatorHandler()
getterBinaryOperator[400]=org.commontemplate.standard.operator.collection.MapGetterOperatorHandler()
getterBinaryOperator[600]=org.commontemplate.standard.operator.collection.ArraySelectorOperatorHandler()
getterBinaryOperator[650]=org.commontemplate.standard.operator.collection.ArrayMultiSelectorOperatorHandler()
getterBinaryOperator[700]=org.commontemplate.standard.operator.collection.ArrayGetterOperatorHandler()
getterBinaryOperator[800]=org.commontemplate.standard.operator.collection.ArraySubOperatorHandler()
getterBinaryOperator[900]=org.commontemplate.standard.operator.collection.ListSelectorOperatorHandler()
getterBinaryOperator[950]=org.commontemplate.standard.operator.collection.ListMultiSelectorOperatorHandler()
getterBinaryOperator[1000]=org.commontemplate.standard.operator.collection.ListGetterOperatorHandler()
getterBinaryOperator[1100]=org.commontemplate.standard.operator.collection.ListSubOperatorHandler()
getterBinaryOperator[1200]=org.commontemplate.standard.operator.string.StringCharAtOperatorHandler()
getterBinaryOperator[1300]=org.commontemplate.standard.operator.string.CharSequenceSubOperatorHandler()

binaryOperator{.}=org.commontemplate.standard.operator.BinaryOperatorHandlerChain()
binaryOperator{.}.rightOperandNamed=true
binaryOperator{.}.rightOperandFunctioned=true
binaryOperator{.}.binaryOperatorHandlers=propertyBinaryOperator[]
propertyBinaryOperator[300]=org.commontemplate.standard.operator.object.ObjectFunctionOperatorHandler()
propertyBinaryOperator[300].functionHandlers=function{}
propertyBinaryOperator[400]=org.commontemplate.standard.operator.object.ObjectPropertyOperatorHandler()
propertyBinaryOperator[400].propertyHandlers=property{}
propertyBinaryOperator[500]=org.commontemplate.standard.operator.context.ScopesGetterOperatorHandler()
propertyBinaryOperator[600]=org.commontemplate.standard.operator.context.LocalContextGetterOperatorHandler()
propertyBinaryOperator[700]=org.commontemplate.standard.operator.collection.MapGetterOperatorHandler()

functionPriority=5000

unaryPriority{\=>}=40
unaryPriority{~}=2000
unaryPriority{?}=2000
unaryPriority{!}=2000
unaryPriority{+}=2000
unaryPriority{-}=2000
unaryPriority{max}=3000
unaryPriority{min}=3000
unaryPriority{sum}=3000
unaryPriority{avg}=3000
unaryPriority{.}=3000
unaryPriority{&}=3000
unaryPriority{$}=3000
unaryPriority{[}=3000
unaryPriority{\\}=3000
unaryPriority{@}=3000

binaryPriority{\=>}=40
binaryPriority{\=}=50
binaryPriority{..}=100
binaryPriority{,}=200
binaryPriority{\:}=300
binaryPriority{?}=400
binaryPriority{#}=500
binaryPriority{or}=600
binaryPriority{||}=600
binaryPriority{and}=700
binaryPriority{&&}=700
binaryPriority{|}=800
binaryPriority{xor}=820
binaryPriority{^}=820
binaryPriority{&}=850
binaryPriority{eq}=900
binaryPriority{\=\=}=900
binaryPriority{ne}=900
binaryPriority{!\=}=900
binaryPriority{~\=}=900
binaryPriority{~}=900
binaryPriority{!~}=900
binaryPriority{^\=}=900
binaryPriority{$\=}=900
binaryPriority{*\=}=900
binaryPriority{^~}=900
binaryPriority{$~}=900
binaryPriority{*~}=900
binaryPriority{cmp}=1000
binaryPriority{<\=>}=1000
binaryPriority{le}=1000
binaryPriority{<\=}=1000
binaryPriority{ge}=1000
binaryPriority{>\=}=1000
binaryPriority{lt}=1000
binaryPriority{<}=1000
binaryPriority{gt}=1000
binaryPriority{>}=1000
binaryPriority{is}=1000
binaryPriority{instanceof}=1000
binaryPriority{>>}=1070
binaryPriority{<<}=1070
binaryPriority{>>>}=1070
binaryPriority{orderby}=1080
binaryPriority{^?}=1090
binaryPriority{$?}=1090
binaryPriority{*?}=1090
binaryPriority{^-}=1090
binaryPriority{$-}=1090
binaryPriority{+}=1200
binaryPriority{-}=1200
binaryPriority{*}=1300
binaryPriority{/}=1300
binaryPriority{%}=1300
binaryPriority{**}=1400
binaryPriority{->}=2100
binaryPriority{[}=2100
binaryPriority{.}=2100

property{java.lang.Object[].size}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{boolean[].size}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{char[].size}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{byte[].size}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{short[].size}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{int[].size}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{long[].size}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{float[].size}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{double[].size}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{java.lang.Object[].length}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{boolean[].length}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{char[].length}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{byte[].length}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{short[].length}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{int[].length}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{long[].length}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{float[].length}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{double[].length}=org.commontemplate.standard.property.array.ArrayLengthHandler()
property{java.lang.Object[].sort}=org.commontemplate.standard.property.array.ArraySortPropertyHandler()
property{boolean[].sort}=org.commontemplate.standard.property.array.ArraySortPropertyHandler()
property{char[].sort}=org.commontemplate.standard.property.array.ArraySortPropertyHandler()
property{byte[].sort}=org.commontemplate.standard.property.array.ArraySortPropertyHandler()
property{short[].sort}=org.commontemplate.standard.property.array.ArraySortPropertyHandler()
property{int[].sort}=org.commontemplate.standard.property.array.ArraySortPropertyHandler()
property{long[].sort}=org.commontemplate.standard.property.array.ArraySortPropertyHandler()
property{float[].sort}=org.commontemplate.standard.property.array.ArraySortPropertyHandler()
property{double[].sort}=org.commontemplate.standard.property.array.ArraySortPropertyHandler()
property{java.util.List.sort}=org.commontemplate.standard.property.array.ListSortPropertyHandler()
property{java.lang.Object.toJson}=org.commontemplate.standard.property.object.ObjectToJsonPropertyHandler()
property{java.lang.Object.toXml}=org.commontemplate.standard.property.object.ObjectToXmlPropertyHandler()
property{java.lang.Boolean.not}=org.commontemplate.standard.property.bool.BooleanNotHandler()
property{java.lang.Boolean.toInteger}=org.commontemplate.standard.property.bool.BooleanToIntegerHandler()
property{java.lang.String.empty}=org.commontemplate.standard.property.string.StringIsEmptyPropertyHandler()
property{java.lang.String.whitespace}=org.commontemplate.standard.property.string.StringIsWhitespacePropertyHandler()
property{java.lang.String.naming}=org.commontemplate.standard.property.string.StringIsNamingPropertyHandler()
property{java.lang.String.number}=org.commontemplate.standard.property.string.StringIsNumberPropertyHandler()
property{java.lang.String.capital}=org.commontemplate.standard.property.string.StringCapitalizeHandler()
property{java.lang.String.capitalize}=org.commontemplate.standard.property.string.StringCapitalizeHandler()
property{java.lang.String.uncapitalize}=org.commontemplate.standard.property.string.StringUncapitalizeHandler()
property{java.lang.String.toClass}=org.commontemplate.standard.property.string.StringToClassPropertyHandler()
property{java.lang.String.newInstance}=org.commontemplate.standard.property.string.StringNewInstancePropertyHandler()
property{java.lang.String.toBoolean}=org.commontemplate.standard.property.string.StringToBooleanHandler()
property{java.lang.String.toCharacter}=org.commontemplate.standard.property.string.StringToCharacterHandler()
property{java.lang.String.toByte}=org.commontemplate.standard.property.string.StringToByteHandler()
property{java.lang.String.toShort}=org.commontemplate.standard.property.string.StringToShortHandler()
property{java.lang.String.toInteger}=org.commontemplate.standard.property.string.StringToIntegerHandler()
property{java.lang.String.toLong}=org.commontemplate.standard.property.string.StringToLongHandler()
property{java.lang.String.toFloat}=org.commontemplate.standard.property.string.StringToFloatHandler()
property{java.lang.String.toDouble}=org.commontemplate.standard.property.string.StringToDoubleHandler()
property{java.lang.String.toDate}=org.commontemplate.standard.property.string.StringToDateHandler()
property{java.lang.String.toTime}=org.commontemplate.standard.property.string.StringToTimeHandler()
property{java.lang.String.toDateTime}=org.commontemplate.standard.property.string.StringToDateTimeHandler()
property{java.lang.String.md5Code}=org.commontemplate.standard.property.string.StringMd5PropertyHandler()
property{java.lang.String.shaCode}=org.commontemplate.standard.property.string.StringShaPropertyHandler()
property{java.lang.String.base64Code}=org.commontemplate.standard.property.string.StringBase64PropertyHandler()
property{java.lang.String.escapeHtml}=org.commontemplate.standard.property.string.StringEscapeHtmlHandler()
property{java.lang.String.escapeXml}=org.commontemplate.standard.property.string.StringEscapeXmlHandler()
property{java.lang.String.escapeUrl}=org.commontemplate.standard.property.string.StringEscapeUrlHandler()
property{java.lang.String.escapeJs}=org.commontemplate.standard.property.string.StringEscapeJsHandler()
property{java.lang.String.toUnderlineNaming}=org.commontemplate.standard.property.string.StringToUnderlineNamingHandler()
property{java.lang.String.toCapitalNaming}=org.commontemplate.standard.property.string.StringToCapitalNamingHandler()
property{java.lang.String.toCamelNaming}=org.commontemplate.standard.property.string.StringToCamelNamingHandler()
property{java.lang.String.toAscii}=org.commontemplate.standard.property.string.StringToAsciiPropertyHandler()
property{java.lang.String.toUnicode}=org.commontemplate.standard.property.string.StringToUnicodePropertyHandler()
property{java.lang.String.toSwapCase}=org.commontemplate.standard.property.string.StringSwapCasePropertyHandler()
property{java.util.Date.era}=org.commontemplate.standard.property.date.DateEraHandler()
property{java.util.Date.century}=org.commontemplate.standard.property.date.DateCenturyHandler()
property{java.util.Date.year}=org.commontemplate.standard.property.date.DateYearHandler()
property{java.util.Date.month}=org.commontemplate.standard.property.date.DateMonthHandler()
property{java.util.Date.week}=org.commontemplate.standard.property.date.DateWeekHandler()
property{java.util.Date.day}=org.commontemplate.standard.property.date.DateDayHandler()
property{java.util.Date.hour}=org.commontemplate.standard.property.date.DateHourHandler()
property{java.util.Date.minute}=org.commontemplate.standard.property.date.DateMinuteHandler()
property{java.util.Date.second}=org.commontemplate.standard.property.date.DateSecondHandler()
property{java.util.Date.millisecond}=org.commontemplate.standard.property.date.DateMillisecondHandler()
property{java.util.Date.dayOfYear}=org.commontemplate.standard.property.date.DayOfYearHandler()
property{java.util.Date.weekOfMonth}=org.commontemplate.standard.property.date.WeekOfMonthHandler()
property{java.util.Date.weekOfYear}=org.commontemplate.standard.property.date.WeekOfYearHandler()
property{java.util.Date.timezone}=org.commontemplate.standard.property.date.DateTimezoneHandler()
property{java.util.Date.leap}=org.commontemplate.standard.property.date.DateLeapHandler()
property{java.util.Date.toDateString}=org.commontemplate.standard.property.date.DateToDateStringHandler()
property{java.util.Date.toTimeString}=org.commontemplate.standard.property.date.DateToTimeStringHandler()
property{java.util.Date.toDateTimeString}=org.commontemplate.standard.property.date.DateToDateTimeStringHandler()
property{java.util.Date.toLong}=org.commontemplate.standard.property.date.DateToLongHandler()
property{java.lang.Number.abs}=org.commontemplate.standard.property.number.NumberAbsPropertyHandler()
property{java.lang.Number.sign}=org.commontemplate.standard.property.number.NumberSignPropertyHandler()
property{java.lang.Number.positive}=org.commontemplate.standard.property.number.NumberPositivePropertyHandler()
property{java.lang.Number.negative}=org.commontemplate.standard.property.number.NumberNegativePropertyHandler()
property{java.lang.Number.toBoolean}=org.commontemplate.standard.property.number.NumberToBooleanHandler()
property{java.lang.Number.toByte}=org.commontemplate.standard.property.number.NumberToBytePropertyHandler()
property{java.lang.Number.toShort}=org.commontemplate.standard.property.number.NumberToShortPropertyHandler()
property{java.lang.Number.toInteger}=org.commontemplate.standard.property.number.NumberToIntegerPropertyHandler()
property{java.lang.Number.toLong}=org.commontemplate.standard.property.number.NumberToLongPropertyHandler()
property{java.lang.Number.toFloat}=org.commontemplate.standard.property.number.NumberToFloatPropertyHandler()
property{java.lang.Number.toDouble}=org.commontemplate.standard.property.number.NumberToDoublePropertyHandler()
property{java.lang.Number.toSize}=org.commontemplate.standard.property.number.NumberToSizeHandler()
property{java.lang.Number.toChinese}=org.commontemplate.standard.property.number.NumberToChinesePropertyHandler()
property{java.lang.Number.toChineseCurrency}=org.commontemplate.standard.property.number.NumberToChineseCurrencyPropertyHandler()
property{java.lang.Integer.toBinaryString}=org.commontemplate.standard.property.number.IntegerToBinaryStringPropertyHandler()
property{java.lang.Integer.toHexString}=org.commontemplate.standard.property.number.IntegerToHexStringPropertyHandler()
property{java.lang.Integer.toOctalString}=org.commontemplate.standard.property.number.IntegerToOctalStringPropertyHandler()
property{java.lang.Long.toBinaryString}=org.commontemplate.standard.property.number.LongToBinaryStringPropertyHandler()
property{java.lang.Long.toHexString}=org.commontemplate.standard.property.number.LongToHexStringPropertyHandler()
property{java.lang.Long.toOctalString}=org.commontemplate.standard.property.number.LongToOctalStringPropertyHandler()
property{java.lang.Double.toCeilingInteger}=org.commontemplate.standard.property.number.DoubleToCeilingIntegerPropertyHandler()
property{java.lang.Double.toFloorInteger}=org.commontemplate.standard.property.number.DoubleToFloorIntegerPropertyHandler()
property{java.lang.Float.toCeilingInteger}=org.commontemplate.standard.property.number.FloatToCeilingIntegerPropertyHandler()
property{java.lang.Float.toFloorInteger}=org.commontemplate.standard.property.number.FloatToFloorIntegerPropertyHandler()
property{java.lang.Number.toDate}=org.commontemplate.standard.property.number.LongToDateHandler()
property{java.lang.Number.year}=org.commontemplate.standard.property.number.YearPropertyHandler()
property{java.lang.Number.month}=org.commontemplate.standard.property.number.MonthPropertyHandler()
property{java.lang.Number.week}=org.commontemplate.standard.property.number.WeekPropertyHandler()
property{java.lang.Number.day}=org.commontemplate.standard.property.number.DayPropertyHandler()
property{java.lang.Number.hour}=org.commontemplate.standard.property.number.HourPropertyHandler()
property{java.lang.Number.minute}=org.commontemplate.standard.property.number.MinutePropertyHandler()
property{java.lang.Number.second}=org.commontemplate.standard.property.number.SecondPropertyHandler()
property{java.lang.Number.millisecond}=org.commontemplate.standard.property.number.MillisecondPropertyHandler()

staticProperty{system}=org.commontemplate.standard.property.system.SystemPropertyHandler()
staticProperty{engine}=org.commontemplate.standard.property.system.EnginePropertyHandler()
staticProperty{now}=org.commontemplate.standard.property.system.NowPropertyHandler()
staticProperty{random}=org.commontemplate.standard.property.system.RandomPropertyHandler()
staticProperty{uuid}=org.commontemplate.standard.property.system.UuidPropertyHandler()

function{java.lang.String.replace}=org.commontemplate.standard.function.string.StringReplaceFunctionHandler()
function{java.lang.String.abbreviate}=org.commontemplate.standard.function.string.StringAbbreviateFunctionHandler()
function{java.lang.String.leftPad}=org.commontemplate.standard.function.string.StringLeftPadFunctionHandler()
function{java.lang.String.rightPad}=org.commontemplate.standard.function.string.StringRightPadFunctionHandler()
function{java.lang.String.newInstance}=org.commontemplate.standard.function.string.StringNewInstanceFunctionHandler()

#staticFunction{xxx}=org.commontemplate.standard.function.system.XxxFunctionHandler()

sequence<quarters>=Spring,Summer,Autumn,Winter
sequence<months>=January,February,March,April,May,June,July,August,September,October,November,December
sequence<weekDays>=Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday

commontemplate.evaluateInterceptors=evaluateInterceptors[]
#evaluateInterceptors[100]=com.xxx.XXXInterceptor()

commontemplate.expressionFilter=org.commontemplate.standard.filter.ExpressionFilterChain()
commontemplate.expressionFilter.expressionFilters=expressionFilters[]
expressionFilters[100]=org.commontemplate.standard.filter.ExpressionReplacementFilter()
expressionFilters[100].expressionReplacements=expressionReplacement{}
expressionReplacement{&lt;}=<
expressionReplacement{&gt;}=>
