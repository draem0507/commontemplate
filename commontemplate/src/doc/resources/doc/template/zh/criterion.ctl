<!--$extends{"/doc/template/frame.ctl"}-->
	<!--$zone{"content"}-->
								<b>1. 编码规范</b><br/>
								(1) 遵守JAVA所有命名约定<br/>
								(2) 采用Eclipse默认的缩进风格<br/>
								(3) 数据抽象耦合度 (DAC) &lt;=7<br/>
								(4) 类扇出(CFO) &lt;=20<br/>
								(5) 参数个数 &lt;=5<br/>
								(6) 代码行数 &lt;=150<br/>
								(7) 圈复杂度(CC) &lt;=10<br/>
								(8) 可能的执行路径(NPath) &lt;=200<br/>
								...<br/>
								<br/>
								<b>2. 设计规范</b><br/>
								(1) 遵守最基本的包设计原则和类设计原则。<a href="architecture.html">架构设计...</a><br/>
								(2) 尽可能使具体类不继承具体类，被继承的类永远是抽象的。<br/>
								(3) 区分命令与查询函数，也就是有副作用(修改状态)的函数均不返回值(返回类型为void)，有返回值的函数均不修改状态。<br/>
								(4) 公开的函数均明确例出先验条件与后验条件。<br/>
								(5) 所有类都应声明是否线程安全，并且尽可能保证服务域的类线程安全。<br/>
								(6) 有状态切换或值改变时均发布事件，重要的处理过程均留出截面，注册拦截器，便于AOP处理。<br/>
								(7) 配置项尽可能依赖实例，而不是类元，即：不控制SPI类实例的创建方式和生命周期。<br/>
								(8) 服务域尽可能用接口提供API，明确接口功能范围，隐藏内部细节。<br/>
								(9) 实体域尽可能用类或抽象类，便于兼容性扩展。<br/>
								...<br/>
								<br/>
	<!--$end-->
<!--$end-->